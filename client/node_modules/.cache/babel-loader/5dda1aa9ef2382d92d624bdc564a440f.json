{"ast":null,"code":"var _jsxFileName = \"/Users/antonandrushin/Code/react/crown-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.componet';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionOa);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/antonandrushin/Code/react/crown-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionSnapshotToMap","updateCollections","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","CollectionOa","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,qDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACL,mBAAD,CAAjD;AACA,MAAMO,yBAAyB,GAAGF,WAAW,CAACG,YAAD,CAA7C;;AAEA,MAAMC,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD2B;AAAA,SAKnCC,uBALmC,GAKT,IALS;AAAA;;AAOnCC,EAAAA,iBAAiB,GAAG;AAAA,UACRV,iBADQ,GACc,KAAKW,KADnB,CACRX,iBADQ;AAEhB,UAAMY,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvC,YAAMC,cAAc,GAAGjB,8BAA8B,CAACgB,QAAD,CAArD;AACAf,MAAAA,iBAAiB,CAACgB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAJD;AAKH;;AAEDU,EAAAA,MAAM,GAAG;AAAA,UACGC,KADH,GACa,KAAKR,KADlB,CACGQ,KADH;AAAA,UAEGX,OAFH,GAEe,KAAKD,KAFpB,CAEGC,OAFH;AAGL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGT,KAAD,IAAW,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAGH;AAA3C,SAAyDG,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEvB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA1BkC;;AA6BvC,MAAMwB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCtB,EAAAA,iBAAiB,EAAEgB,cAAc,IAAIM,QAAQ,CAACtB,iBAAiB,CAACgB,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAerB,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.componet';\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionOa);\n\nclass ShopPage extends React.Component {\n    state = {\n        loading: true\n    };\n\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount() {\n        const { updateCollections } = this.props;\n        const collectionRef = firestore.collection('collections');\n        collectionRef.onSnapshot(async snapshot => {\n            const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n            updateCollections(collectionsMap);\n            this.setState({ loading: false });\n        });\n    }\n\n    render() {\n        const { match } = this.props;\n        const { loading } = this.state;\n        return (\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} render={(props) => <CollectionOverviewWithSpinner isLoading={ loading } {...props} />} />\n                <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}