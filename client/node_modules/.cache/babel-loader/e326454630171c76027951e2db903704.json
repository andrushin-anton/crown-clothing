{"ast":null,"code":"import _objectSpread from \"/Users/antonandrushin/Code/react/crown-clothing/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity + 1\n    }) : cartItem);\n  } // if the cart item does not exists\n\n\n  return [...cartItems, _objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? _objectSpread({}, cartItem, {\n    quantity: cartItem.quantity - 1\n  }) : cartItem);\n};","map":{"version":3,"sources":["/Users/antonandrushin/Code/react/crown-clothing/client/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","filter"],"mappings":";AACA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACvD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACrBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADrB,CAAzB;;AAIA,MAAIH,gBAAJ,EAAsB;AAClB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACzBA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,qBACOD,QADP;AACiBG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAD/C,SAEEH,QAHC,CAAP;AAKH,GAXsD,CAavD;;;AACA,SAAO,CAAC,GAAGJ,SAAJ,oBAAoBC,aAApB;AAAmCM,IAAAA,QAAQ,EAAE;AAA7C,KAAP;AACH,CAfM;AAiBP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AAC/D,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACrBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EADxB,CAAzB;;AAIA,MAAIH,gBAAgB,CAACK,QAAjB,KAA8B,CAAlC,EAAqC;AACjC,WAAOP,SAAS,CAACU,MAAV,CAAiBN,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAA9D,CAAP;AACH;;AAED,SAAOL,SAAS,CAACM,GAAV,CACHF,QAAQ,IACRA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAAjC,qBACKD,QADL;AACeG,IAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAD7C,OAEEH,QAJC,CAAP;AAMH,CAfM","sourcesContent":["\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n    const existingCartItem = cartItems.find(\n        cartItem => cartItem.id === cartItemToAdd.id \n    );\n\n    if (existingCartItem) {\n        return cartItems.map(cartItem => \n            cartItem.id === cartItemToAdd.id \n            ? { ...cartItem, quantity: cartItem.quantity + 1 }\n            : cartItem\n        );\n    }\n\n    // if the cart item does not exists\n    return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n}\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n    const existingCartItem = cartItems.find(\n        cartItem => cartItem.id === cartItemToRemove.id \n    );\n\n    if (existingCartItem.quantity === 1) {\n        return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id)\n    }\n\n    return cartItems.map(\n        cartItem => \n        cartItem.id === cartItemToRemove.id ? \n        { ...cartItem, quantity: cartItem.quantity - 1 }\n        : cartItem\n    )\n}"]},"metadata":{},"sourceType":"module"}