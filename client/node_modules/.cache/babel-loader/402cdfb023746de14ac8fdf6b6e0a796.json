{"ast":null,"code":"var _jsxFileName = \"/Users/antonandrushin/Code/react/crown-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React, { Component } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport './sign-up.styles.scss';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n\n      if (password !== confirmPassword) {\n        alert('passwords do not match');\n        return;\n      }\n\n      try {\n        const _ref = await auth.createUserWithEmailAndPassword(email, password),\n              user = _ref.user;\n\n        await createUserProfileDocument(user, {\n          displayName\n        });\n        this.setState({\n          displayName: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n    return React.createElement(\"div\", {\n      className: \"sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"I do not have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"text\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (email, password, displayName) => dispatch(signUpStart({\n    email,\n    password,\n    displayName\n  }))\n});\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/antonandrushin/Code/react/crown-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","Component","FormInput","CustomButton","auth","createUserProfileDocument","SignUp","constructor","props","handleSubmit","event","preventDefault","state","displayName","email","password","confirmPassword","alert","createUserWithEmailAndPassword","user","setState","error","console","log","handleChange","target","name","value","render","mapDispatchToProps","dispatch","signUpStart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport './sign-up.styles.scss';\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            displayName: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n        }\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        const { displayName, email, password, confirmPassword } = this.state;\n        if (password !== confirmPassword) {\n            alert('passwords do not match');\n            return;\n        }\n\n        try {\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\n            await createUserProfileDocument(user, { displayName });\n\n            this.setState({\n                displayName: '',\n                email: '',\n                password: '',\n                confirmPassword: ''\n            });\n\n        } catch(error) {\n            console.log(error);\n        }\n    };\n\n    handleChange = event => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    };\n\n    render() {\n        const { displayName, email, password, confirmPassword } = this.state;\n        return (\n            <div className='sign-up'>\n                <h2 className='title'>I do not have an account</h2>\n                <span>Sign up with your email and password</span>\n                <form className='sign-up-form' onSubmit={this.handleSubmit}>\n                    <FormInput\n                        type='text'\n                        name='displayName'\n                        value={displayName}\n                        onChange={this.handleChange}\n                        label='Display Name'\n                        required\n                    />\n\n                    <FormInput\n                        type='text'\n                        name='email'\n                        value={email}\n                        onChange={this.handleChange}\n                        label='Email'\n                        required\n                    />\n\n                    <FormInput\n                        type='password'\n                        name='password'\n                        value={password}\n                        onChange={this.handleChange}\n                        label='Password'\n                        required\n                    />\n\n                    <FormInput\n                        type='password'\n                        name='confirmPassword'\n                        value={confirmPassword}\n                        onChange={this.handleChange}\n                        label='Confirm Password'\n                        required\n                    />\n\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: (email, password, displayName) => dispatch(signUpStart({ email, password, displayName }))\n})\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}